<?xml version="1.0" encoding="UTF-8"?>
<project name="IkariamCore" default="buildTest" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	
	<buildnumber file="build-number.properties" />
	
	<property file="build-version.properties" />
	<property file="build.properties" />
	
	<target name="deployRelease" depends="buildRelease, _deployRelease" />
	<target name="deployTest" depends="buildTest, _deployTest" />
	<target name="updateTranslations" depends="_loadLocalProperties, _updateTranslations" />
	<target name="buildRelease" depends="updateTranslations, _buildRelease" />
	<target name="buildTest" depends="_loadLocalProperties, _buildTest" />
	
	<target name="_loadLocalProperties" depends="_getReleaseVersion">
		<property file="build-local.properties" />
	</target>
	
	<target name="_cleanBuild">
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build}" />
	</target>
	
	<target name="_cleanRelease" depends="_cleanBuild">
		<delete dir="${dir.release}" />
		<mkdir dir="${dir.release}" />
	</target>
	
	<target name="_getReleaseVersion">
		<if>
			<not>
				<equals arg1="${version.correction}" arg2="0"/>
			</not>
			
			<then>
				<property name="script.version.release" value="${script.version.release.correction}"/>
			</then>
			
			<elseif>
				<not>
					<equals arg1="${version.patch}" arg2="0"/>
				</not>
				
				<then>
					<property name="script.version.release" value="${script.version.release.patch}"/>
				</then>
			</elseif>
			
			<else>
				<property name="script.version.release" value="${script.version.release.feature}"/>
			</else>
		</if>
	</target>
	
	<target name="_buildTest" depends="_cleanBuild">
		<merge level="test" debug="true" />
	</target>
	
	<target name="_buildRelease" depends="_cleanRelease">
		<merge level="release" debug="false" />
		
		<copy todir="${dir.release}" encoding="UTF-8">
			<fileset dir="${dir.build}" includes="/" />
		</copy>
	</target>
	
	<target name="_updateTranslations">
		<for list="${script.translations.available}" param="toFetch" delimiter=",">
			<sequential>
				<if>
					<equals arg1="@{toFetch}" arg2="el" />
					<then>
						<var name="fileName" value="gr.json" />
					</then>
					<else>
						<var name="fileName" value="@{toFetch}.json" />
					</else>
				</if>
				
				<get src="${transifex.url}/@{toFetch}/?mode=onlytranslated&amp;file" dest="${dir.source.localization}/${fileName}" username="${transifex.user}" password="${transifex.password}"/>
			</sequential>
		</for>
	</target>
	
	<target name="_deployTest">
		<ftppush level="test" source="${dir.build}" />
	</target>
	
	<target name="_deployRelease">
		<ftppush level="release" source="${dir.release.localization}" />
	</target>
	
	<macrodef name="merge">
		<attribute name="level" default="test" />
		<attribute name="debug" default="false" />
		
		<sequential>
			<!-- localization files -->
			<copy todir="${dir.build.localization}" encoding="UTF-8">
				<fileset dir="${dir.source.localization}" includes="*.json" />
			</copy>
			<loadfile property="script.language.default" srcfile="${dir.build.localization}/en.json">
				<filterchain>
					<tokenfilter>
						<deletecharacters chars="\t"/>
						<trim />
					</tokenfilter>
					<striplinebreaks />
				</filterchain>
			</loadfile>
			
			<!-- script files -->
			<loadfile property="enhance.view"					srcFile="${dir.source.script.resource}/View.js"					encoding="UTF-8" />
			<loadfile property="enhance.island"					srcFile="${dir.source.script.resource}/Island.js"				encoding="UTF-8" />
			<loadfile property="enhance.finance"				srcFile="${dir.source.script.resource}/Finance.js"				encoding="UTF-8" />
			<loadfile property="enhance.missingResources"		srcFile="${dir.source.script.resource}/MissingResources.js"		encoding="UTF-8" />
			<loadfile property="enhance.tooltips"				srcFile="${dir.source.script.resource}/Tooltips.js"				encoding="UTF-8" />
			<loadfile property="enhance.zoom"					srcFile="${dir.source.script.resource}/Zoom.js"					encoding="UTF-8" />
			<loadfile property="enhance.resourceInformation"	srcFile="${dir.source.script.resource}/ResourceInformation.js"	encoding="UTF-8" />
			<loadfile property="enhance.highscore"				srcFile="${dir.source.script.resource}/Highscore.js"			encoding="UTF-8" />
			<loadfile property="enhance.messages"				srcFile="${dir.source.script.resource}/Messages.js"				encoding="UTF-8" />
			<loadfile property="enhance.troopInformation"		srcFile="${dir.source.script.resource}/TroopInformation.js"		encoding="UTF-8" />
			
			<!-- language resource includes -->
			<var name="resource.language.includes" value="" />
			<var name="script.translations.array" value="" />
			<for list="${script.translations.available}" param="translation" delimiter=",">
				<sequential>
					<if>
						<equals arg1="@{translation}" arg2="el" />
						<then>
							<var name="usedTranslation" value="gr" />
						</then>
						<else>
							<var name="usedTranslation" value="@{translation}" />
						</else>
					</if>
					
					<var name="resource.language.includes" value="${resource.language.includes}${line.separator}// @resource&#x0009;&#x0009;${usedTranslation}&#x0009;&#x0009;&#x0009;&#x0009;${resource.language.url.@{level}}/${usedTranslation}.json" />
					
					<var name="script.translations.array" value="${script.translations.array}'${usedTranslation}'" />
				</sequential>
			</for>
			<for list="${ikariamCore.translations.available}" param="translation" delimiter=",">
				<sequential>
					<var name="resource.language.includes" value="${resource.language.includes}${line.separator}// @resource&#x0009;&#x0009;core_@{translation}&#x0009;&#x0009;&#x0009;&#x0009;${resource.ikariamCore.language.url.@{level}}/core_@{translation}.json" />
					<var name="resource.language.includes" value="${resource.language.includes}${line.separator}// @resource&#x0009;&#x0009;core_@{translation}_settings&#x0009;${resource.ikariamCore.language.url.@{level}}/core_@{translation}_settings.json" />
				</sequential>
			</for>
			<propertyregex property="script.translations.array" override="true" input="[${script.translations.array}]" regexp="''" replace="', '" />
			
			<copy todir="${dir.build}" encoding="UTF-8">
				<fileset dir="${dir.source.script}" includes="*.js" />
				
				<filterset begintoken="@" endtoken="@">
					<filter token="SCRIPT_ID" 				value="${script.id.number.@{level}}" />
					<filter token="SCRIPT_NAME" 			value="${script.name}${script.level.@{level}}" />
					<filter token="SCRIPT_NAMESPACE"		value="${script.namespace}" />
					<filter token="SCRIPT_AUTHOR_NAME"		value="${script.author.name}" />
					<filter token="SCRIPT_AUTHOR_EMAIL"		value="${script.author.email}" />
					<filter token="SCRIPT_LICENSE"			value="${script.license}" />
					<filter token="SCRIPT_VERSION"			value="${script.version.@{level}}" />
					<filter token="SCRIPT_LINK_GREASY_FORK"	value="${script.link.greasyFork}" />
					<filter token="SCRIPT_LINK_GITHUB"		value="${script.link.github}" />
					<filter token="SCRIPT_DEBUG"			value="@{debug}" />
					<filter token="SCRIPT_LANGUAGE_DEFAULT"	value="${script.language.default}" />
					
					<filter token="SCRIPT_DESCRIPTION_DEFAULT"	value="${script.description.default}" />
					<filter token="SCRIPT_DESCRIPTION_DE"		value="${script.description.de}" />
					
					<filter token="SCRIPT_TRANSLATIONS_ARRAY"	value="${script.translations.array}" />
					<filter token="RESOURCE_LANGUAGE_URL"		value="${resource.language.url.@{level}}" />
					<filter token="RESOURCE_LANGUAGE_INCLUDES"	value="${resource.language.includes}" />
					<filter token="REQUIRE_IKARIAM_CORE"		value="${require.ikariamCore.@{level}}" />
					
					<filter token="ENHANCE_VIEW"					value="${enhance.view}" />
					<filter token="ENHANCE_ISLAND"					value="${enhance.island}" />
					<filter token="ENHANCE_FINANCE"					value="${enhance.finance}" />
					<filter token="ENHANCE_MISSING_RESOURCES"		value="${enhance.missingResources}" />
					<filter token="ENHANCE_TOOLTIPS"				value="${enhance.tooltips}" />
					<filter token="ENHANCE_ZOOM"					value="${enhance.zoom}" />
					<filter token="ENHANCE_RESOURCE_INFORMATION"	value="${enhance.resourceInformation}" />
					<filter token="ENHANCE_HIGHSCORE"				value="${enhance.highscore}" />
					<filter token="ENHANCE_MESSAGES"				value="${enhance.messages}" />
					<filter token="ENHANCE_TROOP_INFORMATION"		value="${enhance.troopInformation}" />
				</filterset>
			</copy>
		</sequential>
	</macrodef>
	
	<macrodef name="ftppush">
		<attribute name="level" default="test" />
		<attribute name="source" />
		<sequential>
			<ftp server="${ftp.name.server.@{level}}" userid="${ftp.name.user.@{level}}" password="${ftp.password.@{level}}" action="mkdir" verbose="yes" passive="yes" remotedir="${dir.ftp.@{level}}" />
			<ftp server="${ftp.name.server.@{level}}" userid="${ftp.name.user.@{level}}" password="${ftp.password.@{level}}" action="send" verbose="yes" passive="yes" remotedir="${dir.ftp.@{level}}">
				<fileset dir="@{source}" includes="/" />
			</ftp>
		</sequential>
	</macrodef>
</project>